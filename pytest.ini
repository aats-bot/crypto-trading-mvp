[tool:pytest]
# Configuração do pytest para Crypto Trading MVP

# Diretórios de teste
testpaths = tests

# Padrões de arquivos de teste
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers personalizados para categorizar testes
markers =
    unit: Testes unitários rápidos
    integration: Testes de integração com dependências externas
    e2e: Testes end-to-end completos
    slow: Testes que demoram mais de 5 segundos
    trading: Testes relacionados a estratégias de trading
    auth: Testes de autenticação e autorização
    api: Testes de endpoints da API
    bybit: Testes de integração com Bybit
    dashboard: Testes do dashboard Streamlit
    performance: Testes de performance e stress
    security: Testes de segurança

# Configurações de execução
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --durations=10
    --maxfail=5

# Configuração de logging durante testes
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configuração de warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Timeout para testes (em segundos)
timeout = 300

# Configuração para testes assíncronos
asyncio_mode = auto

# Diretórios a ignorar
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    .venv
    venv
    __pycache__
    .pytest_cache
    htmlcov

# Configuração mínima de cobertura por arquivo
cov_fail_under = 80

# Configuração para execução em paralelo (quando pytest-xdist estiver instalado)
# addopts = -n auto
