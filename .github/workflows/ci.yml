name: CI Pipeline - Bot Trading MVP

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:

env:
  PYTHON_VERSION: "3.12"

permissions:
  contents: read

jobs:
  lint:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Print versions (debug)
        run: |
          python -V
          pip -V

      - name: Install dev deps
        run: |
          python -m pip install --upgrade pip wheel setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install ruff black flake8

      - name: Ruff
        run: ruff check .

      - name: Black (check)
        run: black --check .

      - name: Flake8
        run: flake8 .

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-test.txt

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip wheel setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          if [ -d tests ]; then \
            pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml; \
          else \
            echo "No tests/ directory; skipping."; \
          fi

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
