# Configurações do Bot de Trading - Exemplo
# Copie este arquivo para .env e preencha com seus valores reais

# === CONFIGURAÇÕES GERAIS ===
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO

# === BANCO DE DADOS ===
DATABASE_URL=postgresql://user:password@localhost:5432/trading_bot
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# === REDIS (Cache/Queue) ===
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=

# === API BYBIT ===
BYBIT_API_KEY=your_api_key_here
BYBIT_API_SECRET=your_api_secret_here
BYBIT_TESTNET=true
BYBIT_RECV_WINDOW=5000

# === SEGURANÇA ===
JWT_SECRET=your_super_secret_jwt_key_here_change_this
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# === API CONFIGURAÇÕES ===
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_RELOAD=true

# === DASHBOARD ===
DASHBOARD_HOST=0.0.0.0
DASHBOARD_PORT=8501
DASHBOARD_TITLE="Bot de Trading MVP"

# === TRADING ===
DEFAULT_STRATEGY=sma_crossover
MAX_POSITION_SIZE=1000
RISK_PERCENTAGE=2.0
STOP_LOSS_PERCENTAGE=5.0
TAKE_PROFIT_PERCENTAGE=10.0

# === NOTIFICAÇÕES ===
ENABLE_NOTIFICATIONS=true
SLACK_WEBHOOK_URL=
DISCORD_WEBHOOK_URL=
EMAIL_SMTP_SERVER=
EMAIL_SMTP_PORT=587
EMAIL_USERNAME=
EMAIL_PASSWORD=
EMAIL_FROM=
EMAIL_TO=

# === MONITORAMENTO ===
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
GRAFANA_ADMIN_PASSWORD=admin

# === DOCKER ===
COMPOSE_PROJECT_NAME=trading-bot-mvp
DOCKER_REGISTRY=ghcr.io
DOCKER_IMAGE_TAG=latest

# === CI/CD ===
BUILD_NUMBER=
GIT_COMMIT=
GIT_BRANCH=

# === DESENVOLVIMENTO ===
PYTEST_ARGS=-v --cov=. --cov-report=html
BLACK_ARGS=--line-length=88
ISORT_ARGS=--profile=black

# === PRODUÇÃO ===
# Descomente e configure para produção
# ENVIRONMENT=production
# DEBUG=false
# BYBIT_TESTNET=false
# API_RELOAD=false
